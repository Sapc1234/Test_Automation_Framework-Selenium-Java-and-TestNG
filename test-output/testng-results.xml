<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="17" passed="17" failed="0" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2025-08-29T13:58:21 IST" name="Default suite" finished-at="2025-08-29T13:58:22 IST" duration-ms="303">
    <groups>
    </groups>
    <test started-at="2025-08-29T13:58:21 IST" name="Default test" finished-at="2025-08-29T13:58:22 IST" duration-ms="303">
      <class name="Programs">
        <test-method signature="factorialProgram()[pri:1, instance:Programs@4009e306]" started-at="2025-08-29T13:58:21 IST" name="factorialProgram" finished-at="2025-08-29T13:58:22 IST" duration-ms="17" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- factorialProgram -->
        <test-method signature="compressedString()[pri:2, instance:Programs@4009e306]" started-at="2025-08-29T13:58:22 IST" name="compressedString" finished-at="2025-08-29T13:58:22 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- compressedString -->
        <test-method signature="compressedString1()[pri:3, instance:Programs@4009e306]" started-at="2025-08-29T13:58:22 IST" name="compressedString1" finished-at="2025-08-29T13:58:22 IST" duration-ms="8" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- compressedString1 -->
        <test-method signature="fibonanciSeries()[pri:4, instance:Programs@4009e306]" started-at="2025-08-29T13:58:22 IST" name="fibonanciSeries" finished-at="2025-08-29T13:58:22 IST" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- fibonanciSeries -->
        <test-method signature="uniqueNumber()[pri:5, instance:Programs@4009e306]" started-at="2025-08-29T13:58:22 IST" name="uniqueNumber" finished-at="2025-08-29T13:58:22 IST" duration-ms="12" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- uniqueNumber -->
        <test-method signature="vowelsAndConsonants()[pri:5, instance:Programs@4009e306]" started-at="2025-08-29T13:58:22 IST" name="vowelsAndConsonants" finished-at="2025-08-29T13:58:22 IST" duration-ms="5" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- vowelsAndConsonants -->
        <test-method signature="palindrome()[pri:6, instance:Programs@4009e306]" started-at="2025-08-29T13:58:22 IST" name="palindrome" finished-at="2025-08-29T13:58:22 IST" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- palindrome -->
        <test-method signature="min_Number()[pri:7, instance:Programs@4009e306]" started-at="2025-08-29T13:58:22 IST" name="min_Number" finished-at="2025-08-29T13:58:22 IST" duration-ms="9" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- min_Number -->
        <test-method signature="max_Number()[pri:8, instance:Programs@4009e306]" started-at="2025-08-29T13:58:22 IST" name="max_Number" finished-at="2025-08-29T13:58:22 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- max_Number -->
        <test-method signature="largest_Number()[pri:9, instance:Programs@4009e306]" started-at="2025-08-29T13:58:22 IST" name="largest_Number" finished-at="2025-08-29T13:58:22 IST" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- largest_Number -->
        <test-method signature="smallest_Number()[pri:10, instance:Programs@4009e306]" started-at="2025-08-29T13:58:22 IST" name="smallest_Number" finished-at="2025-08-29T13:58:22 IST" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- smallest_Number -->
        <test-method signature="pyramid_Triangle_Example1()[pri:11, instance:Programs@4009e306]" started-at="2025-08-29T13:58:22 IST" name="pyramid_Triangle_Example1" finished-at="2025-08-29T13:58:22 IST" duration-ms="4" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- pyramid_Triangle_Example1 -->
        <test-method signature="pyramid_Triangle_Example2()[pri:12, instance:Programs@4009e306]" started-at="2025-08-29T13:58:22 IST" name="pyramid_Triangle_Example2" finished-at="2025-08-29T13:58:22 IST" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- pyramid_Triangle_Example2 -->
        <test-method signature="RemoveDuplicates()[pri:13, instance:Programs@4009e306]" started-at="2025-08-29T13:58:22 IST" name="RemoveDuplicates" finished-at="2025-08-29T13:58:22 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- RemoveDuplicates -->
        <test-method signature="secondLargestElementArray()[pri:14, instance:Programs@4009e306]" started-at="2025-08-29T13:58:22 IST" name="secondLargestElementArray" finished-at="2025-08-29T13:58:22 IST" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- secondLargestElementArray -->
        <test-method signature="convertUppertoLowerCaseLetter()[pri:15, instance:Programs@4009e306]" started-at="2025-08-29T13:58:22 IST" name="convertUppertoLowerCaseLetter" finished-at="2025-08-29T13:58:22 IST" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- convertUppertoLowerCaseLetter -->
        <test-method signature="palindromeNumber()[pri:16, instance:Programs@4009e306]" started-at="2025-08-29T13:58:22 IST" name="palindromeNumber" finished-at="2025-08-29T13:58:22 IST" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- palindromeNumber -->
      </class> <!-- Programs -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
